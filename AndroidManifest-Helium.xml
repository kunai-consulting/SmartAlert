<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
      android:versionCode="1"
      android:versionName="1.0" package="com.slalomdigital.smartalert">
      
    <!-- minSdkVersion sets runtime compatibility ("will run on API level 7") -->
    <!-- targetSdkVersion should be set to the latest version tested, to disable compatibility modes 
            ("was tested with API level 15 features") -->
    <uses-sdk android:minSdkVersion="7" 
        android:targetSdkVersion="15"/>
    
    <!-- REQUIRED -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.VIBRATE"/>
    <uses-permission android:name="android.permission.BROADCAST_STICKY" />
    
    <!-- GCM requires a Google account. -->
	<uses-permission android:name="android.permission.GET_ACCOUNTS" />
	
	<!-- Keeps the processor from sleeping when a message is received. -->
	<uses-permission android:name="android.permission.WAKE_LOCK" />
    
    <!-- REQUIRED FOR LOCATION -->
    <!-- Use ACCESS_COARSE_LOCATION if GPS access is not necessary -->
    <!-- uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /-->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    
    <!--  REQUIRED for wifi wake functionality -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    
    <!-- REQUIRED for GCM (when minSdkVersion < 16) -->
    <!-- Only this application can receive the messages and registration result -->
    <permission android:name="com.slalomdigital.smartalert.permission.C2D_MESSAGE" android:protectionLevel="signature" />
    <uses-permission android:name="com.slalomdigital.smartalert.permission.C2D_MESSAGE" />
    
    <!-- This app has permission to register and receive message -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    
    <!-- Helium Only -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

    <application android:label="@string/app_name"
        android:icon="@drawable/icon"
        android:name="com.slalomdigital.smartalert.RichPushApplication"
        android:theme="@style/Theme.Sherlock"
        android:debuggable="true">

        <activity android:name=".MainActivity"
                  android:label="@string/app_name"
        >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".InboxActivity" />
        <activity android:name=".MessageActivity" />
        <activity android:name=".PushPreferencesActivity" />

        <!-- REQUIRED -->
        <receiver android:name="com.urbanairship.CoreReceiver">
            <!-- REQUIRED IntentFilter - For Helium and Hybrid -->
            <intent-filter>
              <action android:name="android.intent.action.BOOT_COMPLETED" />
              <action android:name="android.intent.action.ACTION_SHUTDOWN" />
            </intent-filter>
        </receiver>

        <receiver android:name="com.slalomdigital.smartalert.PushReceiver">
            <!-- REQUIRED IntentFilter - For Helium and Hybrid -->
            <intent-filter>
                <action android:name="com.urbanairship.push.PushManager.ACTION_NOTIFICATION_OPENED" />
            </intent-filter>
        </receiver>

        <!-- REQUIRED -->
        <!-- The 'android:process' parameter is optional. Set it to a value starting
            with a colon (:) to make it run in a separate,
            private process -->
        <service android:name="com.urbanairship.push.PushService"
                android:process=":com.urbanairship.process"/>
        <service android:name="com.urbanairship.push.PushWorkerService" android:label="Push Notification Worker Service"/>
        <service android:name="com.urbanairship.analytics.EventService" android:label="Event Service"/>

        <!-- REQUIRED -->
        <!-- The 'android:process' parameter is optional. Set it to a value starting
            with a colon (:) to make it run in a separate,
            private process -->
        <service android:name="com.urbanairship.location.LocationService"
                android:process=":com.urbanairship.process"/>

        <service android:name="com.urbanairship.richpush.RichPushUpdateService"
                 android:process=":com.urbanairship.process"/>

        <!-- REQUIRED -->
        <!-- This is required for persisting preferences related to push and location -->
        <provider android:name="com.urbanairship.UrbanAirshipProvider"
            android:authorities="com.slalomdigital.smartalert.urbanairship.provider"
            android:exported="false"
            android:multiprocess="true" />
    </application>
    
</manifest> 
